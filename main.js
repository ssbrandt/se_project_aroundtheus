!function(){"use strict";class t{constructor(t,e,s){this._cardSelector=e,this._cardTitle=t.title,this._cardImage=t.image,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handleLike=()=>{this._likeButton.classList.toggle("card__like-button_active")};_handleDelete=()=>{this._element.remove(),this._element=null};_setEventListeners(){this._element.querySelector(".card__image").addEventListener("click",this._handleCardClick),this._likeButton.addEventListener("click",this._handleLike),this._deleteButton.addEventListener("click",this._handleDelete)}generateCard(){return this._element=this._getTemplate(),this._element.querySelector(".card__title").textContent=this._cardTitle,this._cardPicture=this._element.querySelector(".card__image"),this._cardPicture.src=this._cardImage,this._cardPicture.alt=`Photo of ${this._cardTitle}`,this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._setEventListeners(),this._element}}class e{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=e}_showInputError(t){const e=this._formElement.querySelector(`.${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._formElement.querySelector(`.${t.id}-error`);t.classList.remove(this._errorClass),e.textContent="",e.classList.remove(this._errorClass)}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_activateButton(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.deactivateSubmitButton():this._activateButton()}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners(),this._toggleButtonState()}deactivateSubmitButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}}class s{constructor(t){this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__button-close")}_handleEscClose=t=>{"Escape"===t.key&&this.close()};_handleCloseOnClick=t=>{t.target.classList.contains("modal_opened")&&!t.target.closest(".modal__container")&&this.close()};_handleCloseButton=()=>{this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",this._handleCloseOnClick),this._closeButton.addEventListener("click",this._handleCloseButton)}removeEventListeners(){this._popupElement.removeEventListener("mousedown",this._handleCloseOnClick),this._closeButton.removeEventListener("click",this._handleCloseButton)}open(){this._popupElement.classList.add("modal_opened"),this.setEventListeners(),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),this.removeEventListeners(),document.removeEventListener("keydown",this._handleEscClose)}}class i extends s{constructor(t){let{popupSelector:e,handleFormSubmit:s}=t;super(e),this._handleFormSubmit=s,this._popupElement=document.querySelector(e),this._popupForm=this._popupElement.querySelector(".modal__form")}_getInputValues=()=>{const t=new FormData(this._popupForm);return Object.fromEntries(t)};handleFormSubmit=t=>{t.preventDefault();const e=this._getInputValues();this._handleFormSubmit(e)};setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this.handleFormSubmit)}close(){this._popupForm.reset(),this._popupForm.removeEventListener("submit",this.handleFormSubmit),super.close()}}const o={};var r;r={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input-error",errorClass:"form__input-error-message_active"},Array.from(document.querySelectorAll(r.formSelector)).forEach((t=>{const s=new e(r,t),i=t.getAttribute("name");o[i]=s,s.enableValidation()}));const n=new class extends s{constructor(t){super(t),this._popupImage=this._popupElement.querySelector(".modal__image"),this._popupTitle=this._popupElement.querySelector(".modal__title_image")}open(t){let{image:e,title:s}=t;this._popupImage.src=e,this._popupImage.alt=`Photo of ${s}`,this._popupTitle.textContent=s,super.open()}}(".view-image-popup"),l=e=>{const s=new t(e,".card-template",(()=>{n.open({image:e.image,title:e.title})}));a.addItem(s.generateCard())},a=new class{constructor(t,e){let{items:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}renderItems(){this._items.forEach(this._renderer)}addItem(t){this._container.prepend(t)}}({items:[{title:"Washington DC",image:"https://images.unsplash.com/photo-1617581629397-a72507c3de9e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1744&q=80"},{title:"Charlottesville",image:"https://images.unsplash.com/photo-1625685124246-529a036f3142?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=774&q=80"},{title:"Rhode Island",image:"https://images.unsplash.com/photo-1579379498402-48d6751d1ae9?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=739&q=80"},{title:"Blue Ridge Mountains",image:"https://images.unsplash.com/photo-1603670849273-deb4670aa548?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=773&q=80"},{title:"Cape Cod",image:"https://images.unsplash.com/photo-1516400691782-ad921bc57267?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=376&q=80"},{title:"Harrisonburg VA",image:"https://images.unsplash.com/photo-1657567384402-b9918d5fd7b5?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=735&q=80"}],renderer:l},".location__cards");a.renderItems();const u=document.forms["edit-profile-form"],c=u.querySelector("#name"),h=u.querySelector("#subtitle"),m=new class{constructor(t){let{userNameSelector:e,userInfoSelector:s}=t;this._userName=document.querySelector(e),this._userInfo=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,info:this._userInfo.textContent}}setUserInfo(t){let{name:e,info:s}=t;this._userName.textContent=e,this._userInfo.textContent=s}}({userNameSelector:".profile__name",userInfoSelector:".profile__subtitle"}),d=new i({popupSelector:".profile-popup",handleFormSubmit:()=>{m.setUserInfo({name:c.value,info:h.value}),d.close()}});document.querySelector(".profile__edit-button").addEventListener("click",(()=>{const t=m.getUserInfo();c.value=t.name,h.value=t.info,o["edit-profile-form"].resetValidation(),d.open()}));const _=new i({popupSelector:".add-card-popup",handleFormSubmit:t=>{l(t),_.close()}});document.querySelector(".profile__add-button").addEventListener("click",(()=>{_.open(),o["add-location-form"].resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,